<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="new-test-suite.xml" />
	  <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
	<munit:test name="new-test-suiteTest" description="MUnit Test" doc:id="1753df65-d30a-4fc5-a748-cc8962bc90a5" >
		<munit:execution >
			<set-payload value='#[%dw 2.0
output application/json
---
{
	"businessInterface":"Temasek.API.details",
	"appName": "temasekMunit ",
	"appId": "APP-TH-004",
	"appVersion": "1.0.0",
	"correlationId": "sfsdgdrgsddiw4423",
	"tracePoint":"TemasekMunitTest",
	"tracePointDescription": "TemasekMunitTest",
	"payload": "TestCasesExecutedSuccessfully",
	"deploymentRunTime": "Cloudhub.singapore region"
  }]' doc:name="Set Payload" doc:id="a9d75a5d-635e-417c-88c2-01d5f3992382" />
			<flow-ref doc:name="temasekLoggingKafkaPublisherFlow" doc:id="7fc4e648-f13c-48df-8dcb-72b08eb66955" name="temasekLoggingKafkaPublisherFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="c5ebac22-0913-4be4-899f-066df61e79b7" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	
 <munit:test name="new-test-suite-mainFlowTest" description="Test" doc:id="c58ce222-de73-4a59-9de4-03b455986b8d" >
		  <munit:execution >
                     <munit:set-event doc:name="Set Message payload == payload_1">
                           <munit:payload value="#['payload_1']" />
                     </munit:set-event>
                     <flow-ref name="secondaryFlow" doc:name="secondaryFlow" />
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_1')]" doc:name="Assert payload"/>
                     <munit-tools:verify-call processor="mule:flow-ref" doc:name="Verify call"  times="1">
                           <munit-tools:with-attributes>
                                  <munit-tools:with-attribute attributeName="name" whereValue="#['firstSubFlow']" />
                           </munit-tools:with-attributes>
                     </munit-tools:verify-call>
              </munit:validation>
	</munit:test>
	
	<munit:test name="new-test-suite-secondaryFlowTest" description="Test" doc:id="7420de29-f390-4447-b34f-e3639082f798" >
		<munit:execution >
                     <munit:set-event doc:name="Set Message payload == payload_2">
                           <munit:payload value="#['payload_2']" />
                     </munit:set-event>
                     <flow-ref name="secondaryFlow" doc:name="secondaryFlow"/>        
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_2')]" doc:name="Assert payload"/>
                     <munit-tools:verify-call processor="mule:flow-ref" doc:name="Verify call"  times="1">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="name" whereValue="#['secondSubFlow']" />
                           </munit-tools:with-attributes>
                     </munit-tools:verify-call>             
              </munit:validation>
	</munit:test>
	
	<munit:test name="new-test-suite-ThirdFlowTest" description="Test" doc:id="274c67e6-acff-43b3-82d1-8acb8eb1c0a9" >
		<munit:execution >
                     <munit:set-event doc:name="Set Message payload == payload_3">
                           <munit:payload value="#['payload_3']" />
                     </munit:set-event>
                     <flow-ref name="secondaryFlow" doc:name="secondaryFlow"/>        
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_3')]" doc:name="Assert payload"/>
                     <munit-tools:verify-call processor="mule:flow-ref" doc:name="Verify call"  times="1">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="name" whereValue="#['thirdSubFlow']" />
                           </munit-tools:with-attributes>
                     </munit-tools:verify-call>             
              </munit:validation>
	</munit:test>
	
	<munit:test name="new-test-suite-FourthFlowTest" description="Test" doc:id="412fdac6-da26-49ef-a3aa-a0dca1a81139" >
		<munit:execution >
                     <munit:set-event doc:name="Set Message payload == payload_4">
                           <munit:payload value="#['payload_4']" />
                     </munit:set-event>
                     <flow-ref name="secondaryFlow" doc:name="secondaryFlow"/>        
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_4')]" doc:name="Assert payload"/>
                     <munit-tools:verify-call processor="mule:flow-ref" doc:name="Verify call"  times="1">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="name" whereValue="#['fourthSubFlow']" />
                           </munit-tools:with-attributes>
                     </munit-tools:verify-call>             
              </munit:validation>
	</munit:test>
	
	<munit:test name="new-test-suite-firstSubFlowTest" description="Test" doc:id="c8e727b2-14cf-4abe-afe4-51b2e7b5a75f" >
		 <munit:execution >
                    <munit:set-event doc:name="Set Query Parameter url_key=payload_1">
                          <munit:payload value="#['']" />
                           <munit:attributes value="#[{queryParams: {url_key: 'payload_1'}}]" />
                     </munit:set-event>
                     <flow-ref name="get:\cicdtest:temasek_munit_api-config" doc:name="get:\cicdtest:temasek_munit_api-config"/>
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_1')]" doc:name="Assert payload"/>
              </munit:validation>
	</munit:test>
	
	<munit:test name="new-test-suite-secondSubFlowTest" description="Test" doc:id="38c36b46-9046-4449-bb20-89a75d3931d1" >
		<munit:execution >
                   <munit:set-event doc:name="Set Query Parameter url_key=payload_2">
                          <munit:payload value="#['']" />
                           <munit:attributes value="#[{queryParams: {url_key: 'payload_2'}}]" />
                     </munit:set-event>
                     <flow-ref name="get:\cicdtest:temasek_munit_api-config" doc:name="get:\cicdtest:temasek_munit_api-config"/>
              </munit:execution>
              <munit:validation >
                   <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_2')]" doc:name="Assert payload"/>
              </munit:validation>
	</munit:test>
	
	<munit:test name="new-test-suite-thirdSubFlowTest" description="Test" doc:id="c19a9ea9-1dbb-41c2-b61b-48a362958ff2" >
		<munit:execution >
                   <munit:set-event doc:name="Set Query Parameter url_key=payload_3">
                          <munit:payload value="#['']" />
                           <munit:attributes value="#[{queryParams: {url_key: 'payload_3'}}]" />
                     </munit:set-event>
                     <flow-ref name="get:\cicdtest:temasek_munit_api-config" doc:name="get:\cicdtest:temasek_munit_api-config"/>
              </munit:execution>
              <munit:validation >
                   <munit-tools:assert-that expression="#[vars.flowValue]" is="#[MunitTools::equalTo('flowValue_3')]" doc:name="Assert payload"/>
              </munit:validation>
	</munit:test>
<munit:test name="test_withMock_1" description="MUnit Test">
              <munit:behavior >
                     <munit-tools:mock-when processor="mule:set-payload" doc:name="Mock when">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="doc:name" whereValue="#[&quot;Set query param 'url_key' to payload&quot;]" />
                           </munit-tools:with-attributes>
                           <munit-tools:then-return >
                                  <munit-tools:payload value="#['']" />
                           </munit-tools:then-return>
                     </munit-tools:mock-when>
                     <munit-tools:mock-when processor="mule:flow-ref" doc:name="Mock when">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="name" whereValue="#['secondaryFlow']" />
                           </munit-tools:with-attributes>
                           <munit-tools:then-return >
                                  <munit-tools:payload value="#['']" />
                                  <munit-tools:variables >
                                         <munit-tools:variable key="flowValue" value="#['flowValue_1']" />
                                  </munit-tools:variables>
                           </munit-tools:then-return>
                     </munit-tools:mock-when>
              </munit:behavior>
              <munit:execution >
                     <flow-ref name="get:\cicdtest:temasek_munit_api-config" doc:name="get:\cicdtest:temasek_munit_api-config"/>
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('responsePayload_1')]" doc:name="Assert that"/>
              </munit:validation>
       </munit:test>
       <munit:test name="test_withMock_2" description="MUnit Test">
              <munit:behavior >
                     <munit-tools:mock-when processor="mule:set-payload" doc:name="Mock when">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="doc:name" whereValue="#[&quot;Set query param 'url_key' to payload&quot;]" />
                           </munit-tools:with-attributes>
                           <munit-tools:then-return >
                                  <munit-tools:payload value="#['']" />
                           </munit-tools:then-return>
                     </munit-tools:mock-when>
                     <munit-tools:mock-when processor="mule:flow-ref" doc:name="Mock when">
                           <munit-tools:with-attributes >
                                  <munit-tools:with-attribute attributeName="name" whereValue="#['secondaryFlow']" />
                           </munit-tools:with-attributes>
                           <munit-tools:then-return >
                                  <munit-tools:payload value="#['']" />
                                  <munit-tools:variables >
                                         <munit-tools:variable key="flowValue" value="#['flowValue_2']" />
                                  </munit-tools:variables>
                           </munit-tools:then-return>
                     </munit-tools:mock-when>        
              </munit:behavior>
              <munit:execution >
                     <flow-ref name="get:\cicdtest:temasek_munit_api-config" doc:name="get:\cicdtest:temasek_munit_api-config"/>
              </munit:execution>
              <munit:validation >
                     <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('responsePayload_2')]" doc:name="Assert that"/>
              </munit:validation>
       </munit:test>
        <munit:test name="get:\cicdtest:temasek_munit_api-config-200-FlowTest" description="Verifying functionality of [get:\cicdtest:temasek_munit_api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="temasek_munit_api-main" />
            <munit:enable-flow-source value="get:\cicdtest:temasek_munit_api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/cicdtest">
                <http:headers><![CDATA[#[{"Accept":"application/json"}]]]></http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" doc:id="366f6880-7a28-4946-a378-e1b7106d0ac3"/>
        </munit:validation>
    </munit:test>
    <munit:test name="get:\cicdtest:temasek_munit_api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\cicdtest:temasek_munit_api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="temasek_munit_api-main" />
            <munit:enable-flow-source value="get:\cicdtest:temasek_munit_api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/cicdtesterror">
                <http:headers><![CDATA[#[output application/java
---
{
	"Accept" : "application/json"
}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
        </munit:validation>
    </munit:test>
   <munit:test name="get:\cicdtest:temasek_munit_api-config-405-application\json-FlowTest" description="Verifying functionality of [get:\cicdtest:temasek_munit_api-config-405-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="temasek_munit_api-main" />
            <munit:enable-flow-source value="get:\cicdtest:temasek_munit_api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="/cicdtest">
                <http:headers><![CDATA[#[output application/java
---
{
	"Accept" : "application/json"
}]]]></http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="405" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(405)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 405" />
        </munit:validation>
    </munit:test>

</mule>
